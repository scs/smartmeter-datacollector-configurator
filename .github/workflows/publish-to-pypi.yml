name: Publish Python package to PyPI / Test PyPI

on:
  push:
    branches:
      - '**'
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend

    name: Build a Python package and upload it to PyPI / Test PyPI
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Set up Node
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Install pipenv
        run: |
          python -m pip install --upgrade pip pipenv
          python --version; python -m pip --version; pipenv --version
      - id: cache-pipenv
        uses: actions/cache@v1
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-3.8-pipenv-${{ hashFiles('**/Pipfile.lock') }}
      - name: Setup backend project with pipenv
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: |
          pipenv install --dev

      - id: cache-npm
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-npm-
      - name: Setup frontend project with npm
        working-directory: frontend/smartmeter-datacollector-configurator
        run: |
          npm ci --ignore-scripts

      - name: Build a Python package
        run: |
          pipenv run build

      - name: Archive the built Python package
        uses: actions/upload-artifact@v2
        with:
          name: smartmeter-datacollector-configurator-py
          path: backend/dist/*

      - name: Publish the Python package to Test PyPI
        if: github.ref == 'refs/heads/master'
        uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
          packages_dir: backend/dist/
          skip_existing: true

      - name: Publish the Python package to PyPI
        if: startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          packages_dir: backend/dist/

      - name: Get the tag name
        id: tag-name
        if: startsWith(github.ref, 'refs/tags')
        uses: olegtarasov/get-tag@v2.1.1

      - name: Create a new release
        if: startsWith(github.ref, 'refs/tags')
        uses: ncipollo/release-action@v1.8.8
        with:
          allowUpdates: true
          artifacts: dist/*.tar.gz,dist/*.whl
          draft: true
          name: Smart Meter Data Collector Configurator ${{ steps.tag-name.outputs.tag }}
          omitBody: true
          omitBodyDuringUpdate: true
          omitNameDuringUpdate: true
          omitPrereleaseDuringUpdate: true
          token: ${{ secrets.GITHUB_TOKEN }}
