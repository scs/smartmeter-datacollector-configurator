name: Python code checks

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:
  check_python_code:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ '3.7', '3.8', '3.9' ]
    defaults:
      run:
        working-directory: backend

    name: Running Python code checks with Python ${{ matrix.python-version }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install pipenv
        run: |
          python -m pip install --upgrade pip pipenv
          python --version; python -m pip --version; pipenv --version
      - name: Adjust Python version in Pipfile
        run: |
          sed -i 's/^python_version = .*/python_version = "${{ matrix.python-version }}"/' Pipfile
          cat Pipfile
      - id: cache-pipenv
        uses: actions/cache@v1
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-${{ matrix.python-version }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}
      - name: Setup project with pipenv
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: |
          pipenv install --dev

      - name: Check code style
        run: |
          pipenv run format_check
      - name: Check import order
        run: |
          pipenv run isort_check
      - name: Lint with pylint 
        run: |
          pipenv run lint_check
